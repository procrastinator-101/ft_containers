ft
should be constant with the same seed: 0
abcdefghijklmnopqrstuvwxyz
Intra : Time to execute in Milleseconds : 12555.9
int* is a random-access iteratorfun with int param
The contents of both sequences are equal.
The contents of both sequences differ.
Comparing foo and bar lexicographically (foo<bar):
Using default comparison (operator<): true
Using mycomp as comparison object: false
foo: 10, 20
bar: 10, 65
myvector: 9 8 7 6 5 4 3 2 1 0
myvector: 0 1 2 3 4 5 6 7 8 9
myvector: 9 8 7 6 5 4 3 2 1 0
The fourth element from the end is: 6
myvector: 9 8 7 6 5 4 3 2 1 0
The third element from the end is: 7
myvector.rend()-3 points to: 2
9 8 7 6 5 4 3 2 1 0 
0 1 2 3 4 5 6 7 8 9 
rev_iterator now points to: 3
3 three
2 two
1 one
The fourth element from the end is: 6
myvector: 9 8 7 6 5 4 3 2 1 0
The fourth element from the end is: 6
myvector has 10 elements.
The price of lightbulbs is $0.99
The price of shoes is $39.9
The price of tomatoes is $2.3
Home planet: Earth
Planet size: 6371
foo and bar are not equal
foo is less than bar
foo is less than or equal to bar
The contents of fifth are: 16 2 77 29
Size of foo: 0
Size of bar: 3
myvector contains: 1 2 3 4 5
myvector contains: 5 4 3 2 1
0. size: 0
1. size: 10
2. size: 20
3. size: 19
size: 100
capacity: 128
max_size: 4611686018427387903
myvector contains: 1 2 3 4 5 100 100 100 0 0 0 0
size: 100
capacity: 128
max_size: -1
total: 55
making foo grow:
capacity changed: 1
capacity changed: 2
capacity changed: 4
capacity changed: 8
capacity changed: 16
capacity changed: 32
capacity changed: 64
capacity changed: 128
making bar grow:
capacity changed: 100
myvector contains: 9 8 7 6 5 4 3 2 1 0
myvector contains: 0 1 2 3 4 5 6 7 8 9
myvector.front() is now 62
myvector contains: 10 9 8 7 6 5 4 3 2 1 0
Size of first: 7
Size of second: 5
Size of third: 3
myvector stores 49 numbers.
The elements of myvector add up to 600
myvector contains: 501 502 503 300 300 400 400 200 100 100 100
myvector contains: 4 5 7 8 9 10
foo contains: 200 200 200 200 200
bar contains: 100 100 100
myvector contains: 100 200 300
myvector contains: 1101 2202
The allocated array contains: 0 1 2 3 4
foo and bar are not equal
foo is less than bar
foo is less than or equal to bar
Vector : Time to execute in Milleseconds : 0.297119
size of third: 0
size of fourth: 2
total: 55
0. size: 0
1. size: 5
2. size: 4
mystack.top() is now 15
Popping out elements... 4 3 2 1 0
Popping out elements... 4 3 2 1 0
true
false
false
Stack : Time to execute in Milleseconds : 0.193115
Size of first: 0
Size of second: 3
a => 200
b => 100
c => 300
z => 300
y => 200
x => 100
a => 10
b => 20
c => 30
mymap.size() is 3
The map contains 1000 elements.
mymap['a'] is an element
mymap['b'] is another element
mymap['c'] is another element
mymap['d'] is 
mymap now contains 4 elements.
element 'z' already existed with a value of 200
mymap contains:
a => 100
b => 300
c => 400
z => 200
anothermap contains:
a => 100
b => 300
a => 10
d => 40
foo contains:
a => 11
b => 22
c => 33
bar contains:
x => 100
y => 200
mymap contains:
x => 100
y => 200
z => 300
mymap contains:
a => 1101
b => 2202
mymap contains:
a => 100
b => 200
c => 300

mymap contains:
x => 1001
y => 2002
z => 3003
elements in mymap:
a => 50
c => 150
d => 200
a is an element of mymap.
b is not an element of mymap.
c is an element of mymap.
d is not an element of mymap.
e is not an element of mymap.
f is an element of mymap.
g is not an element of mymap.
a => 20
e => 100
a => 20
e => 100
lower bound points to: b => 20
upper bound points to: c => 30
The allocated array has a size of 40 bytes.
Map : Time to execute in Milleseconds : 1.79419
